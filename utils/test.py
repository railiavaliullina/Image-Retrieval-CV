import hnswlib
import numpy as np
import pickle

dim = 128
num_elements = 3#10000

# Generating sample data
data = [[ 0.04569928, -0.16662344,  0.09986708, -0.0838732 ,  0.06466354,
       -0.01471589,  0.06620509,  0.09962597, -0.04603118, -0.0491919 ,
       -0.12525547,  0.19403802,  0.06592172, -0.08751211, -0.02380641,
        0.11979004,  0.00733334, -0.04082673,  0.03282628,  0.04370388,
       -0.02900596,  0.0592343 , -0.00897938, -0.10038129, -0.05839506,
        0.10467949,  0.20149738,  0.17398451, -0.04765285, -0.06998992,
       -0.03387658,  0.0650221 ,  0.02559493,  0.01861752, -0.01979803,
        0.10138346,  0.01414918, -0.07514284,  0.01837367, -0.06753147,
        0.06325287, -0.03929682,  0.07354531, -0.05887043,  0.19040108,
        0.11332022, -0.04510763,  0.03393566, -0.0180445 ,  0.07256157,
        0.14044379, -0.01669502, -0.05733591,  0.1191548 ,  0.04144039,
       -0.03809891,  0.12628989,  0.02289552,  0.02098897, -0.1497926 ,
        0.04699618, -0.07624684, -0.10854658,  0.04625018,  0.12929519,
        0.0006665 ,  0.09269495, -0.06988335, -0.11275295, -0.15923904,
        0.05496324,  0.06471436, -0.23300654, -0.1528545 ,  0.0138748 ,
        0.01692095,  0.05530231,  0.10348888, -0.09847254, -0.03818775,
       -0.07988732, -0.00580679,  0.02253205,  0.04751363, -0.11161065,
        0.0461723 ,  0.08164885,  0.01355727,  0.06380966, -0.02948718,
       -0.02151227,  0.09157597,  0.05779611,  0.05369052, -0.154613  ,
        0.04916033,  0.19485472,  0.01841656,  0.11647791,  0.06908987,
       -0.01781236, -0.02669215, -0.11908551,  0.16698927, -0.00688868,
        0.01785951,  0.01541101, -0.10044291,  0.16618328, -0.14992632,
       -0.06527308,  0.08618378, -0.13791148,  0.02095372, -0.13628906,
        0.06051029, -0.10236433,  0.00758368,  0.00941778,  0.18163514,
        0.06366552, -0.03691505,  0.01725885,  0.03862436,  0.06901117,
        0.09215628, -0.02067437,  0.04547446],
        [-0.04687844, -0.12084777,  0.08758561, -0.13150243, -0.00602949,
       -0.07145708,  0.01687633,  0.0555986 ,  0.10294592, -0.1219796 ,
       -0.11273153,  0.09731635,  0.11512113, -0.06313431, -0.08689353,
        0.10862274,  0.03971551,  0.00513933,  0.00274046, -0.01929561,
        0.03264854, -0.00761188,  0.00481998, -0.09460817, -0.07029366,
        0.06220044,  0.13598813,  0.12529716, -0.00135602, -0.00835212,
       -0.00160688,  0.07766809,  0.00615311,  0.01240266, -0.05041425,
        0.11759883, -0.0188413 , -0.08244634,  0.05398003, -0.06846502,
       -0.04086182,  0.06818555,  0.07831335, -0.16753294,  0.218323  ,
        0.10167553, -0.01622399, -0.05778442, -0.04674627, -0.00923865,
        0.01290801,  0.00371327, -0.07657566,  0.10879863,  0.11357998,
        0.04910505,  0.1414022 , -0.00847663, -0.01440618, -0.12864052,
       -0.03562076, -0.06140942, -0.0227896 ,  0.04925279,  0.1275305 ,
       -0.01392634,  0.1839267 , -0.03883005, -0.07733396, -0.19770211,
        0.08793034,  0.07979702, -0.13583168, -0.12908761,  0.05949793,
        0.0648397 ,  0.0135018 ,  0.20641015,  0.02546196, -0.00864785,
       -0.1191524 , -0.06527971,  0.03709421, -0.00602249, -0.03818659,
       -0.0128556 ,  0.08361848, -0.01729259,  0.02452953,  0.01757603,
       -0.01727903,  0.16675322,  0.00532609,  0.00180921, -0.12079903,
       -0.03816939,  0.15785412,  0.08552855,  0.09840038,  0.06486516,
       -0.05721843, -0.00642624, -0.1048789 ,  0.14784859, -0.08828159,
       -0.02059146, -0.1038219 , -0.1185497 ,  0.17037052, -0.07824809,
       -0.04101497,  0.07537682, -0.10447857,  0.07359508, -0.19233665,
        0.05124978, -0.04249253, -0.05613427, -0.01943215,  0.19885606,
        0.1394166 , -0.03164894,  0.01420489, -0.08250365,  0.05511738,
        0.16680363, -0.03205401,  0.03648643],
        [-0.08171652, -0.23035559,  0.10676377, -0.14773367,  0.00113386,
       -0.06447566, -0.00328616,  0.08977619, -0.10260435, -0.1451151 ,
       -0.0983993 ,  0.00930688,  0.07848931, -0.06582277, -0.01127893,
        0.03323369,  0.06480028, -0.05075973, -0.05706656, -0.01800451,
       -0.02532631, -0.00926697,  0.03761952, -0.16341163, -0.05707512,
        0.06729885,  0.0308989 ,  0.07493306, -0.05330441, -0.0203256 ,
        0.02431806,  0.15214163,  0.0179216 ,  0.02890629, -0.06517879,
        0.08949548, -0.01575083, -0.00853681,  0.02143606, -0.06485374,
        0.01791096,  0.05226211,  0.08631939, -0.14475235,  0.22835547,
        0.07286575,  0.03738425,  0.05093758, -0.00501519,  0.08270363,
        0.02253286,  0.00059044, -0.13676573,  0.03272555,  0.08257264,
       -0.00779594,  0.2434287 , -0.03178707, -0.05671645, -0.15501864,
       -0.04518357, -0.0928693 ,  0.00908494,  0.00973382,  0.2185108 ,
       -0.0396552 ,  0.13286398, -0.01279128, -0.12084518, -0.16891672,
        0.06181981,  0.11703873, -0.20835029, -0.23647289,  0.01815719,
        0.10819942,  0.02393522,  0.12424844,  0.0091139 , -0.04117457,
       -0.0777203 ,  0.0316225 ,  0.00316889, -0.00855922,  0.02459717,
       -0.01606166,  0.0243669 ,  0.00386894,  0.01725545, -0.00928145,
        0.00740798,  0.19354354,  0.03214759,  0.06408551, -0.11570483,
       -0.04013937,  0.1261865 ,  0.12145808,  0.02812513,  0.08401331,
       -0.03375172,  0.00928068, -0.1392511 ,  0.07977318, -0.09675264,
        0.03441385, -0.02450531, -0.10562243,  0.10000952, -0.05404516,
       -0.05588496,  0.09219376, -0.14627138,  0.01925037, -0.1031961 ,
        0.01442524, -0.03734409,  0.00845173, -0.02195719,  0.09560486,
        0.04392065, -0.04024122,  0.07377782, -0.0396688 ,  0.02211919,
        0.15218101,  0.04057584,  0.0444844 ]]#np.float32(np.random.random((num_elements, dim)))
data = np.asarray(data)
data_labels = np.asarray([0, 3, 2])
p = hnswlib.Index(space='l2', dim=dim)  # possible options are l2, cosine or ip
p.init_index(max_elements=num_elements)
p.add_items(data, data_labels)
p.set_ef(50)
labels, distances = p.knn_query(data, k=2)

# Index objects support pickling
# WARNING: serialization via pickle.dumps(p) or p.__getstate__() is NOT thread-safe with p.add_items method!
# Note: ef parameter is included in serialization; random number generator is initialized with random_seed on Index load
p_copy = pickle.loads(pickle.dumps(p))  # creates a copy of index p using pickle round-trip

### Index parameters are exposed as class properties:
print(f"Parameters passed to constructor:  space={p_copy.space}, dim={p_copy.dim}")
print(f"Index construction: M={p_copy.M}, ef_construction={p_copy.ef_construction}")
print(f"Index size is {p_copy.element_count} and index capacity is {p_copy.max_elements}")
print(f"Search speed/quality trade-off parameter: ef={p_copy.ef}")
